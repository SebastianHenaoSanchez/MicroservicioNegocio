/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.JsonApiBodyRequest;
import io.swagger.model.JsonApiBodyResponseErrors;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-02T15:28:49.618Z")

@Api(value = "listar", description = "the listar API")
public interface ListarApi {

    @ApiOperation(value = "Retorna todos los negocios", nickname = "listarGet", notes = "Retorna todos los negocios", response = JsonApiBodyRequest.class, tags={ "negocios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "negocios encontrados", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarGet();


    @ApiOperation(value = "buscar negocio por id de administrador", nickname = "listarIdadminIdadminGet", notes = "retorna los negocios que tiene un administrador", response = JsonApiBodyRequest.class, tags={ "negocios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "id_admin no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/idadmin/{idadmin}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdadminIdadminGet(@ApiParam(value = "ID del admin",required=true) @PathVariable("idadmin") String idadmin);


    @ApiOperation(value = "buscar negocio por id", nickname = "listarIdnegocioIdnegocioGet", notes = "retorna un negocio", response = JsonApiBodyRequest.class, tags={ "negocios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "estado no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/idnegocio/{idnegocio}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarIdnegocioIdnegocioGet(@ApiParam(value = "id de negocio a retornar",required=true) @PathVariable("idnegocio") String idnegocio);


    @ApiOperation(value = "buscar por tipos de negocio", nickname = "listarTiponegocioTiponegocioGet", notes = "retorna los negocios de un tipo", response = JsonApiBodyRequest.class, tags={ "negocios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "listado de algun tipo de negocio", response = JsonApiBodyRequest.class),
        @ApiResponse(code = 404, message = "tipo de negocio no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/tiponegocio/{tiponegocio}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<?> listarTiponegocioTiponegocioGet(@ApiParam(value = "tipo de negocio a retornar",required=true) @PathVariable("tiponegocio") String tiponegocio);

}
